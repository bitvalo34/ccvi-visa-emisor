services:
  db:
    image: postgres:16
    container_name: ccvi_db
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: ccvi
    ports:
      - '55432:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./scripts/sql:/app/scripts/sql:ro
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1']
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ccvi_api
    env_file:
      - .env
    environment:
      API_KEY: ${API_KEY}
      CVV_PEPPER: ${CVV_PEPPER}
      IDEMPOTENCY_TTL_HOURS: ${IDEMPOTENCY_TTL_HOURS}
      ISSUER_NAME: ${ISSUER_NAME}
      BASE_PATH: ${BASE_PATH}
      PUBLIC_BASE_URL: ${PUBLIC_BASE_URL}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    # EDITADITO: usar script robusto que instala deps si faltan/lock cambi√≥ y luego inicia
    command: ['sh', '-lc', 'chmod +x scripts/docker-entry.sh && scripts/docker-entry.sh']
    restart: unless-stopped

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        VITE_API_BASE: '/'
        VITE_API_KEY: ${API_KEY:-}
    container_name: ccvi_web
    environment: {}
    depends_on:
      - api
    ports:
      - '8080:80'
    restart: unless-stopped

volumes:
  pg_data:
  node_modules:
